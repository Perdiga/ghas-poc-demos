name: "CodeQL - Advanced Configuration Multi-build"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '15 23 * * 6'


jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
         # Analyzes C and C++ code using the commands in `Build C and C++ code`
         - language: c-cpp
           build-mode: manual
         - language: java-kotlin
           build-mode: manual
           #build-mode: none # analyzes Java only use this to test efficacy of scans without a build
           # Analyzes C# code by automatically detecting a build
         - language: csharp
           build-mode: autobuild

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    # Manual C++ build
    - if: ${{ matrix.build-mode == 'manual' && matrix.language  == 'c-cpp' }}
      shell: bash
      run: |
        cd build_example/c_plus_plus/
        mkdir build
        cd build
        cmake ..
        make

    # Manual build from bash for Java 
    - if: ${{ matrix.language  == 'java-kotlin' }}
      shell: bash
      run: |
        cd build_example/java/
        mvn compile

    # Manual build for .net
    - if: ${{ matrix.language == 'csharp' }}
      name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'

    - if: ${{ matrix.language == 'csharp' }}
      shell: bash
      run: |
        cd build_example/dotnet-typescript/backend
        dotnet restore

    - if: ${{ matrix.language == 'csharp' }}
      name: Build .NET project
      run: |
        cd build_example/dotnet-typescript/backend
        dotnet build --configuration Release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
